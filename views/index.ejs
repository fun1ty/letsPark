<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" type="text/css" href="/reset.css" />
    <link rel="stylesheet" type="text/css" href="/index.css" />
    <link rel="stylesheet" href="/map.css" />
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>

    <script
      type="text/javascript"
      src="https://dapi.kakao.com/v2/maps/sdk.js?appkey=<%= javascriptkey%>&libraries=services"
    ></script>
    <title>Main</title>
    <div id="test"></div>
  </head>
  <body>
    <!-- header -->
    <div class="header-container">
      <nav class="headbox">
        <div class="headermenu">
          <img
            src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/W_text_logo.svg"
            alt="로고"
            class="logo"
          />

          <div class="menu-icons">
            <div class="menu-icon" onclick="reservationAlarm()">
              <img
                src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/bell.svg"
                alt="알람"
                width="25px"
                height="25px"
              />
            </div>
            <div class="menu-icon">
              <button id="menu-button" onclick="toggleMenu()">
                <img
                  src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/menu.svg"
                  alt="메뉴"
                  width="25px"
                  height="25px"
                />
              </button>
            </div>
          </div>
        </div>

        <div id="menu-container" class="menu">
          <button id="close-button" onclick="closeMenu()">
            <img
              src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/X.svg"
              alt="닫기"
              width="25px"
              height="25px"
            />
          </button>

          <div style="margin: 20px">
            <button class="mypageEdit" onclick="profileEdit()">
              <div>
                <img
                  src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/profile.svg"
                  alt="profile"
                  width="30px"
                  height="30px"
                />
              </div>
              <div>
                <div class="userNick">파킹퍼시블님</div>
                <div class="userEmail">parkinghaka@gmail.com</div>
              </div>
            </button>
          </div>

          <div>
            <button class="reservationButton" onclick="userReservation()">
              예약 내역 보기
            </button>
          </div>
          <div class="noticeBox">
            <ul class="menuContainer">
              <li onclick="parkingAdd()">
                🚙 공유주차장 등록
                <img
                  src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/Vector.svg"
                  alt="이동"
                  width="14px"
                  height="14px"
                  class="chevronRight"
                />
              </li>

              <li type="button" id="chat" onclick="chatBtn()">
                💬 채팅방
                <img
                  src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/Vector.svg"
                  alt="이동"
                  width="14px"
                  height="14px"
                  class="chevronRight"
                />
              </li>
              <li>💰 포인트</li>
            </ul>
          </div>
          <h5>이용안내 및 문의하기</h5>
          <button type="button" onclick="fetchUserInfo()">사용자조회</button>
          <br />
          <a href="/user/login">로그인하기</a><br />
          <a href="/user/signup">회원가입</a>
          <h5 class="payButton">결제내역</h5>
          <div class="logoutBox">
            <span class="service">이용안내 및 문의하기</span>
            <span class="logoutService" onclick="logout()">로그아웃</span>
          </div>

          <!-- 사용자 정보 조회 -->
          <!-- <form name="user-info-form">
            <label for="userid">User ID:</label>
            <input type="text" id="userid" name="userid" readonly />
            <br />
            <label for="password">Password:</label>
            <input type="text" id="password" name="password" readonly />
            <br />
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" readonly />
            <br />
            <label for="nickname">Nickname:</label>
            <input type="text" id="nickname" name="nickname" readonly />
            <br />
            <label for="phone">Phone:</label>
            <input type="text" id="phone" name="phone" readonly />
            <br />
          </form> -->
        </div>
        <input type="hidden" id="kakaoLat" />
        <input type="hidden" id="kakaoLng" />
        <div id="search-bar">
          <form onsubmit="searchPlaces(); return false;">
            <div class="search-container">
              <input
                type="text"
                id="search-input"
                name="q"
                placeholder="목적지 또는 주소 검색"
              />
              <div class="filter-icon">
                <img
                  src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/filter.svg"
                  alt="필터"
                  width="25px"
                  height="25px"
                />
              </div>
              <button type="submit" id="search-button"></button>
            </div>
          </form>
        </div>
      </nav>
    </div>
    <input type="hidden" id="check" value="0" />
    <!-- map -->
    <div id="map" style="width: 100%; height: 100vh"></div>

    <div id="search-results"></div>
    <script>
      var map;
      function success({ coords, timestamp }) {
        const lat = coords.latitude; // 위도
        const lng = coords.longitude; // 경도

        var mapContainer = document.getElementById("map"), // 지도를 표시할 div
          mapOption = {
            center: new kakao.maps.LatLng(lat, lng), // 지도의 중심좌표
            level: 3, // 지도의 확대 레벨
          };

        // 지도를 생성합니다
        map = new kakao.maps.Map(mapContainer, mapOption);
        console.log(map);
      }
      function getUserLocation() {
        if (!navigator.geolocation) {
          throw "위치 정보가 지원되지 않습니다.";
        }
        navigator.geolocation.getCurrentPosition(success);
      }

      (async function () {
        const result = await axios({
          method: "POST",
          url: "/",
        });
        console.log(result);
        getUserLocation();

        setTimeout(()=> {
          let set = new Set();
          // 클리닝 리스트 오버레이 설정
          var cleaningPositions = [];
          for(let cleaning of result.data.cleaningList) {
            set.add(cleaning.shareparking_id);
            cleaningPositions.push(
                    {
                      content :
                              '<div class="customoverlay shareparking" style="position: relative; background-color: white; border-radius: 20px; border: 2px solid lightgreen; width: 100px; height: 26px">' +
                              `  <div  style="text-decoration: none; color: inherit; display: flex; justify-content: center; align-items: center; height: 100%;" onclick="">` +
                              `    <span class="localname" style="color: black;">청소요청</span>` +
                              "  </div>" +
                              "</div>",
                      latlng : new kakao.maps.LatLng(cleaning.shareparking.lat, cleaning.shareparking.lng),
                    }
            )

          }

          for(let i=0 ; i<cleaningPositions.length ; i++) {
            var customOverlay = new kakao.maps.CustomOverlay({
              position : cleaningPositions[i].latlng,
              content : cleaningPositions[i].content,
            });

            customOverlay.setMap(map);
          }

          //노상주차장 리스트 오버레이 설정
          var publicParkingPositions = [];
          for(let publicParking of result.data.publicParkingList) {
            publicParkingPositions.push(
                    {
                      content:
                              '<div class="customoverlay publicparking" style="position: relative; background-color: #8783f5; border-radius: 20px; width: 100px; height: 26px">' +
                              `  <div  style="text-decoration: none; color: inherit; display: flex; justify-content: center; align-items: center; height: 100%;" onclick="publicParkingDetail(${publicParking.id})">` +
                              `    <span class="localname">${publicParking.currentparking} / ${publicParking.capacity}</span>` +
                              "  </div>" +
                              "</div>",
                      latlng: new kakao.maps.LatLng(publicParking.lat, publicParking.lng),
                    }
            );
          }
           for (let i = 0; i < publicParkingPositions.length; i++) {
            var customOverlay = new kakao.maps.CustomOverlay({
              position: publicParkingPositions[i].latlng,
              content: publicParkingPositions[i].content,
            });

            customOverlay.setMap(map);
          }
          var shareParkingPositions = [];


          for(let shareParking of result.data.shareParkingList) {
            if (set.has(shareParking.id))
              continue;
            shareParkingPositions.push(
                    {
                      content:
                              '<div class="customoverlay shareparking" style="position: relative; background-color: lightgreen; border-radius: 20px; width: 100px; height: 26px;">' +
                              `  <div  style="text-decoration: none;  color: inherit; display: flex; justify-content: center; align-items: center; height: 100%;" onclick="shareParkingDetail(${shareParking.id})">` +
                              `    <span class="localname">${shareParking.price}</span>` +
                              "  </div>" +
                              "</div>",
                      latlng: new kakao.maps.LatLng(shareParking.lat, shareParking.lng),
                    }
            );

          }
          for (let i = 0; i < shareParkingPositions.length; i++) {
            var customOverlay = new kakao.maps.CustomOverlay({
              position: shareParkingPositions[i].latlng,
              content: shareParkingPositions[i].content,
            });

            customOverlay.setMap(map);
          }
        }, 4000);
      })();

      // 장소 검색 객체를 생성합니다
      var ps = new kakao.maps.services.Places();
      // 키워드로 장소를 검색합니다
      function searchPlaces() {
        const val = document.getElementById("search-input").value;

        ps.keywordSearch(val, placesSearchCB);
      }

      // 키워드 검색 완료 시 호출되는 콜백함수 입니다
      function placesSearchCB(data, status, pagination) {
        if (status === kakao.maps.services.Status.OK) {
          // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해
          // LatLngBounds 객체에 좌표를 추가합니다
          var bounds = new kakao.maps.LatLngBounds();

          for (var i = 0; i < data.length; i++) {
            bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));
          }

          // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다
          map.setBounds(bounds);
        }
      }
    </script>

    <script>
      // 변수를 추가하여 메뉴 상태를 추적합니다.
      var isMenuVisible = false;

      function toggleMenu() {
        var menu = document.getElementById("menu-container");
        if (!isMenuVisible) {
          menu.style.right = "0";
        } else {
          menu.style.right = "-300px";
        }
        // 메뉴 상태를 업데이트합니다.
        isMenuVisible = !isMenuVisible;
      }

      function publicParkingDetail(id) {
        console.log("parkingDetail", id);

        location.href = `/publicparking/detail?id=${id}`;
      }
      function shareParkingDetail(id) {
        console.log("parkingDetail", id);
        location.href = `/shareparking/detail?id=${id}`;
      }
      // 닫기 버튼을 클릭할 때 메뉴를 숨깁니다.
      function closeMenu() {
        var menu = document.getElementById("menu-container");
        menu.style.right = "-300px";
        isMenuVisible = false;
      }
      // 예약 알람 이동
      function reservationAlarm() {
        location.href = "/user/reservation";
      }

      // 회원 정보 수정 이동
      function profileEdit() {
        location.href = "/mypage/:userid/edit";
      }

      // 예약내역조회 이동
      function userReservation() {
        location.href = "/user/reservation";
      }

      // 서버로부터 사용자 정보를 가져오는 함수
      //async function fetchUserInfo() {
      //const token = localStorage.getItem('token');
      //console.log('클라이언트', token);

      //if (!token) {

      //console.log('토큰이 없습니다.');
      //return;
      //}

      //try {
      // const response = await axios.get('/', {
      //headers: {
      //Authorization: `Bearer ${token}`,
      // },
      // });

      //if (response.data && response.data.userid) {
      //  const userInfo = response.data;
      // console.log('사용자 정보:', userInfo);

      // const decodedToken = jwt.verify(token, 'SECRET');
      // console.log('디코딩된 토큰:', decodedToken);

      //  const userIdDisplay = document.getElementById('userIdDisplay');
      //  userIdDisplay.value = userInfo.userid;
      // } else {
      //  console.log('토큰이 유효하지 않습니다.');
      // }
      // } catch (error) {
      //   console.log(error);
      // }
      // }

      //로그아웃
      function logout() {
        localStorage.removeItem("token");
      }

      //공유주차장등록 이동
      function parkingAdd() {
        location.href = "/shareparking";
      }

      //채팅방 이동
      async function chatBtn() {
        console.log("front 채팅방클릭");
        const token = localStorage.getItem("token");
        if (!token) {
          alert("로그인 해주세요");
        } else {
          console.log("chat이동");
          location.href = "/chat";
        }


        }
      

    </script>
  </body>
</html>
