<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <link rel="stylesheet" href="../signup.css" />
    <title>Document</title>
  </head>
  <body>
    <!-- 회원 가입 페이지 -->
    <h2>가입 정보 입력하기</h2>
    <input
      type="text"
      id="userid"
      placeholder="아이디"
      onblur="checkDuplicate()"
    /><br />
    <span id="useridError"></span><br />
    <input type="password" id="password" placeholder="비밀번호" /><br />
    <input
      type="password"
      id="passwordCheck"
      placeholder="비밀번호 확인"
      oninput="checkPassword()"
    /><br />
    <span id="passwordError"></span><br />
    <input type="text" id="name" placeholder="이름" /><br />
    <input type="text" id="nickname" placeholder="닉네임" /><br />
    <input id="phone" placeholder="휴대폰번호" /><br />
    프로필 사진:
    <input type="file" id="profile" onchange="previewImg(this)" /><br />
    <img id="profilePreview" src="" alt="" /><br />
    <button type="button" onclick="registerFunc()">회원가입</button>

    <script>
      //아이디 중복 검사
      async function checkDuplicate() {
        const userid = document.getElementById('userid').value.trim();

        if (userid === '') {
          return;
        }

        try {
          const response = await axios.get(`/user/checkDuplicate/${userid}`);

          if (response.data.result) {
            document.getElementById('useridError').textContent =
              '사용 가능한 아이디입니다.';
          } else {
            document.getElementById('useridError').textContent =
              '이미 사용 중인 아이디입니다.';
          }
        } catch (error) {
          console.error(error);
        }
      }

      //비밀번호 재확인
      function checkPassword() {
        const password = document.getElementById('password').value;
        const passwordCheck = document.getElementById('passwordCheck').value;
        const errorSpan = document.getElementById('passwordError');

        if (password !== passwordCheck) {
          errorSpan.textContent = '비밀번호가 일치하지 않습니다.';
          document
            .getElementById('passwordCheck')
            .setCustomValidity('비밀번호가 일치하지 않습니다.');
        } else {
          errorSpan.textContent = '';
          document.getElementById('passwordCheck').setCustomValidity('');
        }
      }

      //프로필 사진 띄우기
      function previewImg(input) {
        const profilePreview = document.getElementById('profilePreview');
        if (input.files && input.files[0]) {
          const reader = new FileReader();

          reader.onload = function (e) {
            profilePreview.src = e.target.result;
          };

          reader.readAsDataURL(input.files[0]);
        }
      }

      //회원가입
      async function registerFunc() {
        const password = document.getElementById('password').value;

        //비밀번호 숫자 제한, 특수기호 포함 알림입니다. 테스트하는 중에는 주석 처리해서 사용하시면 됩니다.
        // if (
        //   password.length < 8 ||
        //   !/[!@#$%^&*()_+{}\[\]:;<>,.?~\\-]/.test(password)
        // ) {
        //   alert(
        //     '비밀번호는 8자리 이상이어야 하며, 특수 기호를 하나 이상 포함해야 합니다.'
        //   );
        //   return;
        // }

        const profilePicInput = document.getElementById('profile');
        const userId = document.getElementById('userid').value;
        const pw = document.getElementById('password').value;
        const name = document.getElementById('name').value;
        const nickname = document.getElementById('nickname').value;
        const phone = document.getElementById('phone').value;
        const profile = document.querySelector('#profile');

        const formData = new FormData();
        formData.append('userid', userId);
        formData.append('password', pw);
        formData.append('name', name);
        formData.append('nickname', nickname);
        formData.append('phone', phone);

        // 프로필 사진을 선택한 경우
        if (profile.files.length > 0) {
          formData.append('profile', profile.files[0]);
        }

        axios({
          method: 'POST',
          url: '/user/signup',
          data: formData,
          headers: {
            'Content-Type': 'multipart/form-data',
          },
        })
          .then((res) => {
            if (res.data.result) {
              console.log('회원가입 성공');
              const userid = document.getElementById('userid').value;
              const nickname = document.getElementById('nickname').value;
              document.location.href = `/user/${userid}/${nickname}/success`;
            }
          })
          .catch((error) => {
            console.error(error);
          });
      }
    </script>
  </body>
</html>
