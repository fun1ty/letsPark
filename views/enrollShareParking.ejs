<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"
    />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <link rel="stylesheet" type="text/css" href="/reset.css" />
    <link rel="stylesheet" type="text/css" href="/font.css" />
    <link rel="stylesheet" type="text/css" href="/enrollShareParking.css" />
    <script
      type="text/javascript"
      src="//dapi.kakao.com/v2/maps/sdk.js?appkey=<%= javascriptkey%>&libraries=services"
    ></script>
    <script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
    <title>Document</title>
  </head>
  <body>
    <!-- header -->
    <div class="header-container">
      <nav class="headbox">
        <div class="headermenu">
          <img
            src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/W_text_logo.svg"
            alt="로고"
            class="logo"
            onclick="window.location.href='/'"
          />

          <div class="menu-icons">
            <div class="menu-icon" onclick="reservationAlarm()">
              <img
                src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/bell.svg"
                alt="알람"
                width="25px"
                height="25px"
              />
            </div>
            <div class="menu-icon">
              <button id="menu-button" onclick="toggleMenu()">
                <img
                  src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/menu.svg"
                  alt="메뉴"
                  width="25px"
                  height="25px"
                />
              </button>
            </div>
          </div>
        </div>

        <div id="menu-container" class="menu">
          <button id="close-button" onclick="closeMenu()">
            <img
              src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/X.svg"
              alt="닫기"
              width="25px"
              height="25px"
            />
          </button>

          <div style="margin: 20px">
            <button class="mypageEdit" onclick="profileEdit()">
              <div>
                <img id="profilePic" alt="profile" width="30px" height="30px" />
              </div>
              <div>
                <div class="userNick">파킹퍼시블</div>
              </div>
            </button>
          </div>

          <div>
            <button class="reservationButton" onclick="userReservation()">
              예약 내역 보기
            </button>
          </div>
          <div class="noticeBox">
            <ul class="menuContainer">
              <li onclick="parkingAdd()">
                🚙 공유주차장 등록
                <img
                  src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/Vector.svg"
                  alt="이동"
                  width="14px"
                  height="14px"
                  class="chevronRight"
                />
              </li>
              <li onclick="getMySharePark()">
                🚙 내 공유주차장 목록
                <img
                  src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/Vector.svg"
                  alt="이동"
                  width="14px"
                  height="14px"
                  class="chevronRight"
                />
              </li>

              <li type="button" id="chat" onclick="chatListBtn()">
                💬 채팅방
                <img
                  src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/Vector.svg"
                  alt="이동"
                  width="14px"
                  height="14px"
                  class="chevronRight"
                />
              </li>
              <li>💰 포인트</li>
            </ul>
          </div>
          <h5>이용안내 및 문의하기</h5>
          <br />
          <!-- <a href="/user/login">로그인하기</a><br /> -->
          <h5 class="payButton">결제내역</h5>
          <div class="logoutBox">
            <span
              id="loginLogoutButton"
              class="logoutService"
              onclick="logout()"
              >로그인/회원가입</span
            >
          </div>

          <!-- 사용자 정보 조회 -->
          <!-- <form name="user-info-form">
              <label for="userid">User ID:</label>
              <input type="text" id="userid" name="userid" readonly />
              <br />
              <label for="password">Password:</label>
              <input type="text" id="password" name="password" readonly />
              <br />
              <label for="name">Name:</label>
              <input type="text" id="name" name="name" readonly />
              <br />
              <label for="nickname">Nickname:</label>
              <input type="text" id="nickname" name="nickname" readonly />
              <br />
              <label for="phone">Phone:</label>
              <input type="text" id="phone" name="phone" readonly />
              <br />
            </form> -->
        </div>
        <input type="hidden" id="kakaoLat" />
        <input type="hidden" id="kakaoLng" />
    </nav>
</div>
<input type="hidden" id="check" value="0" />
    <div class="mainArea" style="padding: 30px;" >
        <h2 style="font-size: 30px; padding: 20px; padding-bottom: 40px; text-align: center; font-family: 'KBO-Dia-Gothic_bold';">공유주차장 등록하기</h2>
        <div class="esTitle">주차공간 이름</div>
        <input type="text" class="inputall" id="sharePakringName" placeholder="주차장 이름">
        <div class="esTitle">주소</div>
        <input type="text" class="inputall" id="address" readonly placeholder="주소" onclick="getLatLng()">
        <div class="esTitle">가격</div>
        <input type="number" class="inputall" id="price" dir="rtl"> <span style="font-size: 25px;">원</span><br/>
        <span class="esTitle">주차장 사진</span>
        <div class="filebox">
            <input class="upload-name" value="첨부파일" placeholder="첨부파일" readonly>
            <label for="files">파일찾기</label>
            <input type="file" id="files" accept="image/*" onchange="loadFile(this)"><br/>
        </div>
        <div id="imgArea" style="display: flex; justify-content: center; padding-top: 30px;">
        </div>
      <div
        style="
          background-color: #8783f5;
          text-align: center;
          height: 60px;
          line-height: 60px;
          border-radius: 10px;
          margin-top: 40px;
          font-family: 'Dovemayo_gothic';
          font-size: 30px;
          color: white;
        "
        onclick="enrollShareParking()"
      >
        공유주차장 등록
      </div>
    </div>
  </body>
  <script>
    function loadFile(input) {
        const div = document.getElementById('imgArea');
        const uploadName = document.querySelector('.upload-name');
        div.innerHTML = '';
        let file = input.files[0];
        let img = document.createElement('img');
        img.setAttribute('class', 'img');

        img.src = URL.createObjectURL(file);
        uploadName.value = input.files[0].name;
        img.style.width = '350px';
        img.style.height = '250px';
        div.appendChild(img);
    }
    let lat = 0,
      lng = 0;
    var geocoder = new kakao.maps.services.Geocoder();
    function getLatLng() {
      const addrInput = document.getElementById('address');

        var  callback = (result ,status) => {
            if(status === kakao.maps.services.Status.OK) {
                lat = result[0].y;
                lng = result[0].x;
            };
        };
        new daum.Postcode({
            oncomplete: function(data) {
                addrInput.value = data.address;
                geocoder.addressSearch(data.address, callback);
            }
        }).open()
    };

    async function enrollShareParking() {
      const shareParkingName =
        document.getElementById('sharePakringName').value;
      if (shareParkingName === '') {
        alert('주차장 이름을 입력해주세요.');
        return;
      }
      const address = document.getElementById('address').value;
      if (address === '') {
        alert('주소를 입력해주세요.');
        return;
      }
      const price = document.getElementById('price').value;
      if (price === '') {
        alert('가격을 입력해주세요.');
        return;
      }
      const file = document.querySelector('#files');
      if (file.files[0] === undefined) {
        alert('주차장 이미지를 첨부해주세요.');
        return;
      }
      const formData = new FormData();

        formData.append('file', file.files[0]);
        formData.append('shareparkname', shareParkingName);
        formData.append('address', address);
        formData.append('price', price);
        formData.append('lat', lat);
        formData.append('lng', lng);

      try {
        const result = await axios({
          method: 'POST',
          url: '/shareparking',
          data: formData,
          headers: {
            'Content-Type': 'multipart/form-data',
            Authorization: `${localStorage.getItem('token')}`,
          },
        });

        if (result) {
          alert('공유주차장 등록이 완료되었습니다. ');
          document.location.href = '/';
        } else {
          alert('등록된 회원이 아닙니다. 회원가입을 진행해주세요. ');
          document.location.href = '/signup';
        }
      } catch (err) {
        console.log(err);
      }
    }
  </script>
  <script>
    // 변수를 추가하여 메뉴 상태를 추적합니다.
    var isMenuVisible = false;

    function toggleMenu() {
      var menu = document.getElementById('menu-container');
      if (!isMenuVisible) {
        menu.style.right = '0';
      } else {
        menu.style.right = '-300px';
      }

      // 메뉴 상태를 업데이트합니다.
      isMenuVisible = !isMenuVisible;
    }
    // 닫기 버튼을 클릭할 때 메뉴를 숨깁니다.
    function closeMenu() {
      var menu = document.getElementById('menu-container');
      menu.style.right = '-300px';
      isMenuVisible = false;
    }

    // 예약 알람 이동
    function reservationAlarm() {
      location.href = '/user/reservation';
    }

    // 회원 정보 수정 이동
    function profileEdit() {
      location.href = '/mypage/:userid/edit';
    }

    // 회원 정보 수정 이동
    function profileEdit() {
      const token = localStorage.getItem('token');

      if (token) {
        axios
          .get('/data', {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          })
          .then((response) => {
            const userId = response.data.responseData.data.userid;
            console.log(userId);
            location.href = `/mypage/${userId}`;
          })
          .catch((error) => {
            console.log(error);
          });
      } else {
        location.href = '/user/login';
      }
    }

    // 예약내역조회 이동
    function userReservation() {
      location.href = '/user/reservation';
    }

    // 로그인 유무에 따른 닉네임 값 표시
    window.addEventListener('DOMContentLoaded', () => {
      const token = localStorage.getItem('token');
      const loginLogoutButton = document.getElementById('loginLogoutButton');
      const userNickElement = document.querySelector('.userNick'); // 사용자 닉네임 엘리먼트

      if (token) {
        // 토큰이 있는 경우
        loginLogoutButton.innerText = '로그아웃';

        axios
          .get('/data', {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          })
          .then((response) => {
            const userNickname = response.data.responseData.data.nickname;
            userNickElement.innerText = userNickname;
          })
          .catch((error) => {
            console.log(error);
          });
      } else {
        // 토큰이 없는 경우
        userNickElement.innerText = '로그인해주세요';
      }
    });

    //로그아웃
    //로그인 상태 시 로컬 스토리지 토큰 비우도록
    //로그아웃 상태 시 /user/login 이동
    function logout() {
      const token = localStorage.getItem('token');
      const loginLogoutButton = document.getElementById('loginLogoutButton');

      if (token) {
        if (confirm('로그아웃 하시겠습니까?')) {
          localStorage.removeItem('token');
          loginLogoutButton.innerText = '로그인/회원가입';

          alert('로그아웃 되었습니다!');

          //로그아웃 후 새로고침
          location.href = '/';
        }
      } else {
        location.href = '/user/login';
      }
    }

    window.addEventListener('DOMContentLoaded', () => {
      const token = localStorage.getItem('token');
      const loginLogoutButton = document.getElementById('loginLogoutButton');

      if (token) {
        loginLogoutButton.innerText = '로그아웃';
      }
    });

    //프로필 사진 띄우기
    const token = localStorage.getItem('token');
    if (token) {
      axios
        .get('/data', {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        })
        .then((response) => {
          const profileUrl = response.data.responseData.data.profile;
          const profilePic = document.getElementById('profilePic');
          profilePic.src = profileUrl;
        })
        .catch((error) => {
          console.log(error);
        });
    } else {
      profilePic.src =
        'https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/profile.svg';
    }

    //공유주차장등록 이동
    function parkingAdd() {
      location.href = '/shareparking';
    }

    //채팅방 이동
    function chatBtn() {
      console.log('front 채팅방클릭');
      location.href = '/chat';
    }

    //my채팅내역
    function chatListBtn() {
      console.log('front 채팅방리스트 클릭');
      const token = localStorage.getItem('token');
      if (!token) {
        alert('로그인 해주세요');
        return;
      } else {
        axios
          .get('/data', {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          })
          .then((response) => {
            console.log('chatList', response);
            const userid = response.data.responseData.data.id;
            console.log('회원번호', userid);
            location.href = `/chatList/${userid}`;
          })
          .catch((error) => {
            console.log('chatList에러', error);
            document.location.reload();
          });
      }
    }

    async function getMySharePark() {
      let id;
      let check;
      try {
        const result = await axios({
          method: 'POST',
          url: '/shareparking/mysharepark',
          headers: {
            Authorization: `${localStorage.getItem('token')}`,
          },
        });
        console.log(result);
        id = result.data.id;
        check = result.data.result;
      } catch (err) {
        console.log(err);
      }
      console.log('밖', id);
      if (check) {
        document.location.href = `/shareparking/myshareparks?id=${id}`;
      }
    }
  </script>
</html>
