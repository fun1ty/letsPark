<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"
    />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <link rel="stylesheet" type="text/css" href="/reset.css" />
    <link rel="stylesheet" type="text/css" href="/font.css" />
    <link rel="stylesheet" type="text/css" href="/profileEdit.css" />
    <script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
    <title>Document</title>
  </head>

  <body>
    <!-- header -->
    <div class="header-container">
      <nav class="headbox">
        <div class="headermenu">
          <img
            src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/W_text_logo.svg"
            alt="로고"
            class="logo"
            onclick="window.location.href='/'"
          />

          <div class="menu-icons">
            <div class="menu-icon" onclick="reservationAlarm()">
              <img
                src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/bell.svg"
                alt="알람"
                width="25px"
                height="25px"
              />
            </div>
            <div class="menu-icon">
              <button id="menu-button" onclick="toggleMenu()">
                <img
                  src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/menu.svg"
                  alt="메뉴"
                  width="25px"
                  height="25px"
                />
              </button>
            </div>
          </div>
        </div>

        <div id="menu-container" class="menu">
          <button id="close-button" onclick="closeMenu()">
            <img
              src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/X.svg"
              alt="닫기"
              width="25px"
              height="25px"
            />
          </button>

          <div style="margin: 20px">
            <button class="mypageEdit" onclick="profileEdit()">
              <div>
                <img id="profilePic" alt="profile" width="30px" height="30px" />
              </div>
              <div>
                <div class="userNick">파킹퍼시블</div>
              </div>
            </button>
          </div>

          <div>
            <button class="reservationButton" onclick="userReservation()">
              예약 내역 보기
            </button>
          </div>
          <div class="noticeBox">
            <ul class="menuContainer">
              <li onclick="parkingAdd()">
                🚙 공유주차장 등록
                <img
                  src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/Vector.svg"
                  alt="이동"
                  width="14px"
                  height="14px"
                  class="chevronRight"
                />
              </li>

              <li type="button" id="chat" onclick="chatListBtn()">
                💬 채팅방
                <img
                  src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/Vector.svg"
                  alt="이동"
                  width="14px"
                  height="14px"
                  class="chevronRight"
                />
              </li>
              <li>💰 포인트</li>
            </ul>
          </div>
          <h5>이용안내 및 문의하기</h5>
          <br />
          <!-- <a href="/user/login">로그인하기</a><br /> -->
          <h5 class="payButton">결제내역</h5>
          <div class="logoutBox">
            <span
              id="loginLogoutButton"
              class="logoutService"
              onclick="logout()"
              >로그인/회원가입</span
            >
          </div>
        </div>
        <!-- <input type="hidden" id="kakaoLat" />
            <input type="hidden" id="kakaoLng" />
            <div id="search-bar">
              <form onsubmit="searchPlaces(); return false;">
                <div class="search-container">
                  <input
                    type="text"
                    id="search-input"
                    name="q"
                    placeholder="목적지 또는 주소 검색"
                  />
                  <div class="filter-icon">
                    <img
                      src="https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/filter.svg"
                      alt="필터"
                      width="25px"
                      height="25px"
                    />
                  </div>
                  <button type="submit" id="search-button"></button>
                </div>
              </form>
            </div> -->
      </nav>
    </div>
    <!-- 회원정보 수정 페이지 -->
    <h2
      style="
        font-size: 30px;
        padding: 20px;
        padding-bottom: 40px;
        text-align: center;
        font-family: 'KBO-Dia-Gothic_bold';
      "
    >
      회원정보수정
    </h2>
    <div class="mainEdit" style="padding: 30px">
      <form name="profileView" enctype="multipart/form-data">
        <img
          id="profile"
          src="<%= data.profile %>"
          alt="프로필 이미지"
        /><br /><br />
        <div class="fileEdit">
          <input class="upload-name" value="첨부파일" placeholder="첨부파일" />
          <label for="profileImage">업로드</label>
          <input
            type="file"
            id="profileImage"
            name="profileImage"
            accept="image/*"
            onchange="previewProfileImage()"
          />
        </div>
        <br />
        <br />
        <br />
        <br />
        <div class="eTitle">아이디</div>
        <br />
        <input
          type="text"
          class="inputEdit"
          id="userid"
          value="<%= data.userid %>"
          placeholder="아이디"
          readonly
        /><br />

        <div class="eTitle">비밀번호 변경</div>
        <br />
        <input
          type="password"
          class="inputEdit"
          id="newPassword"
          value=""
          placeholder="새 비밀번호 (8자 이상, 특수기호 포함)"
        /><br />
        <div class="eTitle">비밀번호 확인</div>
        <br />
        <input
          type="password"
          class="inputEdit"
          id="passwordCheck"
          placeholder="비밀번호 확인"
          oninput="checkPassword()"
        /><br />
        <span id="passwordError"></span>
        <br />
        <div class="eTitle">이름</div>
        <br />
        <input
          type="text"
          class="inputEdit"
          id="name"
          value="<%= data.name %>"
          placeholder="이름"
        /><br />
        <div class="eTitle">닉네임</div>
        <br />
        <input
          type="text"
          class="inputEdit"
          id="nickname"
          value="<%= data.nickname %>"
          placeholder="닉네임"
        /><br />
        <div class="eTitle">휴대폰 번호</div>
        <br />
        <input
          type="text"
          class="inputEdit"
          id="phone"
          value="<%= data.phone %>"
          placeholder="휴대폰번호"
        /><br />
      </form>
    </div>
    <div class="editButtonContainer">
      <button type="button" class="editButton edit" onclick="edit()">
        수정하기
      </button>
      <button type="button" class="editButton reset" onclick="resetForm()">
        초기화
      </button>
    </div>

    <script>
      //비밀번호 재확인
      function checkPassword() {
        const password = document.getElementById('newPassword').value;
        const passwordCheck = document.getElementById('passwordCheck').value;
        const errorSpan = document.getElementById('passwordError');

        if (password !== passwordCheck) {
          errorSpan.textContent = '비밀번호가 일치하지 않습니다.';
          errorSpan.style.color = 'red';
          document
            .getElementById('passwordCheck')
            .setCustomValidity('비밀번호가 일치하지 않습니다.');
        } else {
          errorSpan.textContent = '';
          document.getElementById('passwordCheck').setCustomValidity('');
        }
      }
      //초기 프로필 이미지 경로 저장 전역 변수
      let initialProfileImg = '<%= data.profile %>';

      // 프로필 이미지 변경 시 미리보기
      function previewProfileImage() {
        const profileImage = document.getElementById('profile');
        const profileInput = document.getElementById('profileImage');

        if (profileInput.files && profileInput.files[0]) {
          const reader = new FileReader();

          reader.onload = function (e) {
            profileImage.src = e.target.result;
          };

          reader.readAsDataURL(profileInput.files[0]);
        }
      }

      //회원정보 수정버튼
      function edit() {
        if (!confirm('회원정보를 수정하시겠습니까?')) {
          return;
        }
        const form = document.forms['profileView'];
        const userid = document.querySelector('#userid').value;
        const newPassword = document.querySelector('#newPassword').value;
        const profileImageInput = document.querySelector('#profileImage');
        const profileImage = profileImageInput.files[0];

        const formData = new FormData();
        formData.append('userid', form.userid.value);
        formData.append('newPassword', newPassword);
        formData.append('name', form.name.value);
        formData.append('nickname', form.nickname.value);
        formData.append('phone', form.phone.value);

        if (profileImage) {
          formData.append('profileImage', profileImage);
        }

        axios({
          method: 'PATCH',
          url: `/mypage/${userid}/edit`,
          data: formData,
          headers: {
            Authorization: `Bearer ${localStorage.getItem('token')}`,
            'Content-Type': 'multipart/form-data',
          },
        }).then((res) => {
          if (res.data.result) {
            alert('수정이 완료되었습니다.');
            window.location.href = '/';
          }
        });
      }

      //수정 초기화 버튼
      function resetForm() {
        const form = document.forms['profileView'];

        form.userid.value = '<%= data.userid %>';
        form.newPassword.value = '';
        form.passwordCheck.value = '';
        form.name.value = '<%= data.name %>';
        form.nickname.value = '<%= data.nickname %>';
        form.phone.value = '<%= data.phone %>';

        document.getElementById('profile').src = initialProfileImg;

        const errorSpan = document.getElementById('passwordError');
        errorSpan.textContent = '';
        document.getElementById('passwordCheck').setCustomValidity('');
      }

      // 메뉴 script
      // 변수를 추가하여 메뉴 상태를 추적합니다.
      var isMenuVisible = false;

      function toggleMenu() {
        var menu = document.getElementById('menu-container');
        if (!isMenuVisible) {
          menu.style.right = '0';
        } else {
          menu.style.right = '-300px';
        }

        // 메뉴 상태를 업데이트합니다.
        isMenuVisible = !isMenuVisible;
      }
      // 닫기 버튼을 클릭할 때 메뉴를 숨깁니다.
      function closeMenu() {
        var menu = document.getElementById('menu-container');
        menu.style.right = '-300px';
        isMenuVisible = false;
      }

      // 예약 알람 이동
      function reservationAlarm() {
        location.href = '/user/reservation';
      }

      // 회원 정보 수정 이동
      function profileEdit() {
        location.href = '/mypage/:userid/edit';
      }

      // 회원 정보 수정 이동
      function profileEdit() {
        const token = localStorage.getItem('token');

        if (token) {
          axios
            .get('/data', {
              headers: {
                Authorization: `Bearer ${token}`,
              },
            })
            .then((response) => {
              const userId = response.data.responseData.data.userid;
              console.log(userId);
              location.href = `/mypage/${userId}`;
            })
            .catch((error) => {
              console.log(error);
            });
        } else {
          location.href = '/user/login';
        }
      }

      // 예약내역조회 이동
      function userReservation() {
        location.href = '/user/reservation';
      }

      // 로그인 유무에 따른 닉네임 값 표시
      window.addEventListener('DOMContentLoaded', () => {
        const token = localStorage.getItem('token');
        const loginLogoutButton = document.getElementById('loginLogoutButton');
        const userNickElement = document.querySelector('.userNick'); // 사용자 닉네임 엘리먼트

        if (token) {
          // 토큰이 있는 경우
          loginLogoutButton.innerText = '로그아웃';

          axios
            .get('/data', {
              headers: {
                Authorization: `Bearer ${token}`,
              },
            })
            .then((response) => {
              const userNickname = response.data.responseData.data.nickname;
              userNickElement.innerText = userNickname;
            })
            .catch((error) => {
              console.log(error);
            });
        } else {
          // 토큰이 없는 경우
          userNickElement.innerText = '로그인해주세요';
        }
      });

      //로그아웃
      //로그인 상태 시 로컬 스토리지 토큰 비우도록
      //로그아웃 상태 시 /user/login 이동
      function logout() {
        const token = localStorage.getItem('token');
        const loginLogoutButton = document.getElementById('loginLogoutButton');

        if (token) {
          if (confirm('로그아웃 하시겠습니까?')) {
            localStorage.removeItem('token');
            loginLogoutButton.innerText = '로그인/회원가입';

            alert('로그아웃 되었습니다!');

            //로그아웃 후 새로고침
            location.href = '/';
          }
        } else {
          location.href = '/user/login';
        }
      }

      window.addEventListener('DOMContentLoaded', () => {
        const token = localStorage.getItem('token');
        const loginLogoutButton = document.getElementById('loginLogoutButton');

        if (token) {
          loginLogoutButton.innerText = '로그아웃';
        }
      });

      //프로필 사진 띄우기
      const token = localStorage.getItem('token');
      if (token) {
        axios
          .get('/data', {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          })
          .then((response) => {
            const profileUrl = response.data.responseData.data.profile;
            const profilePic = document.getElementById('profilePic');
            profilePic.src = profileUrl;
          })
          .catch((error) => {
            console.log(error);
          });
      } else {
        profilePic.src =
          'https://kdt8-cs.s3.ap-northeast-2.amazonaws.com/%EC%A3%BC%EC%B0%A8%ED%95%98%EC%B9%B4_icon/profile.svg';
      }

      //공유주차장등록 이동
      function parkingAdd() {
        location.href = '/shareparking';
      }

      //채팅방 이동
      function chatBtn() {
        console.log('front 채팅방클릭');
        location.href = '/chat';
      }

      //my채팅내역
      function chatListBtn() {
        console.log('front 채팅방리스트 클릭');
        const token = localStorage.getItem('token');
        if (!token) {
          alert('로그인 해주세요');
          return;
        } else {
          axios
            .get('/data', {
              headers: {
                Authorization: `Bearer ${token}`,
              },
            })
            .then((response) => {
              console.log('chatList', response);
              const userid = response.data.responseData.data.id;
              console.log('회원번호', userid);
              location.href = `/chatList/${userid}`;
            })
            .catch((error) => {
              console.log('chatList에러', error);
              document.location.reload();
            });
        }
      }

      async function getMySharePark() {
        let id;
        let check;
        try {
          const result = await axios({
            method: 'POST',
            url: '/shareparking/mysharepark',
            headers: {
              Authorization: `${localStorage.getItem('token')}`,
            },
          });
          console.log(result);
          id = result.data.id;
          check = result.data.result;
        } catch (err) {
          console.log(err);
        }
        console.log('밖', id);
        if (check) {
          document.location.href = `/shareparking/myshareparks?id=${id}`;
        }
      }
    </script>
  </body>
</html>
